# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import time
import paho.mqtt.client as paho
from paho import mqtt
from pymodbus.client.sync import ModbusTcpClient
from pymodbus.client.sync import ModbusSerialClient

from bitarray import bitarray
import struct
from struct import *
check = 0
vrijednost = 5
start = 0
stop = 0
spreman = 0
smetnje = 1
button_press = 0
button_release = 0
try:
    client1 = ModbusTcpClient("192.168.137.11")
except:
    pass
#client1 = ModbusSerialClient(method = 'rtu', port = "COM3")

print(client1.connect())
# setting callbacks for different events to see if it works, print the message etc.
def on_connect(client, userdata, flags, rc, properties=None):
    print("CONNACK received with code %s." % rc)

# with this callback you can see if your publish was successful
def on_publish(client, userdata, mid, properties=None):
    print("mid: " + str(mid))

# print which topic was subscribed to
def on_subscribe(client, userdata, mid, granted_qos, properties=None):
    print("Subscribed: " + str(mid) + " " + str(granted_qos))

# print message, useful for checking if it was successful

def on_message(client, userdata, msg):
    print(msg.topic)
    global vrijednost
    if(msg.topic == "plc/start"):
        global start
        start = 1
    if(msg.topic == "plc/stop"):
        global stop
        stop = 1
    if(msg.topic == "plc/spreman"):
        global spreman
        spreman = 1
    if(msg.topic == "plc/spreman"):
        global smetnje
        smetnje = 0
    if(msg.topic == "plc/button_pressed"):
        global button_press
        button_press = msg.payload
    if(msg.topic == "plc/button_release"):
        global button_release
        button_release = 1
    
    #vrijednost = 0
    #print(vrijednost)
    

    vrijednost = int(msg.payload)
    print("odavlena je:", vrijednost)

    print(msg.topic + " " + str(msg.qos) + " " + str(msg.payload))
    

# using MQTT version 5 here, for 3.1.1: MQTTv311, 3.1: MQTTv31
# userdata is user defined data of any type, updated by user_data_set()
# client_id is the given name of the client
client = paho.Client(client_id="", userdata=None, protocol=paho.MQTTv5)
client.on_connect = on_connect

# enable TLS for secure connection
client.tls_set(tls_version=mqtt.client.ssl.PROTOCOL_TLS)
# set username and password
client.username_pw_set("nemanja1", "Pijanista123!")
# connect to HiveMQ Cloud on port 8883 (default for MQTT)
client.connect("264182fcba8747a8ab21160de2312abb.s2.eu.hivemq.cloud", 8883)


# setting callbacks, use separate functions like above for better visibility
client.on_subscribe = on_subscribe
client.on_message = on_message
client.on_publish = on_publish
client.loop_start()



def button_pressed(pushButton):
    
    #client.publish("plc/button_pressed", payload=1, qos=1)
    #client.subscribe("plc/button_pressed", qos=1)            


    client1.write_coils(22,True)
    pushButton.setStyleSheet("background-color: green")

def button_released(pushButton):
    client1.write_coils(22,[False]*1)
    #client.publish("plc/button_pressed", payload=0, qos=1)
    start = 0
    pushButton.setStyleSheet("background-color: red")

def button_2_pressed(pushButton):
    
    client.publish("plc/stop", payload=1, qos=1)
    client.subscribe("plc/stop", qos=1)            
    stop = 0
    client1.write_coils(26,[False]*1)
    pushButton.setStyleSheet("background-color: green")

def button_2_released(pushButton):
    client1.write_coils(26,True)
    client.publish("plc/stop", payload=0, qos=1)
    pushButton.setStyleSheet("background-color: red")

def button_3_pressed(pushButton):
    
    client.publish("plc/spreman", payload=1, qos=1)

    client1.write_coils(24,True)
    pushButton.setStyleSheet("background-color: green")

def button_3_released(pushButton):
    client1.write_coils(24,[False]*1)
    client.publish("plc/spreman", payload=0, qos=1)
    pushButton.setStyleSheet("background-color: red")

def button_4_pressed(pushButton):
    
    client.publish("plc/smetnje", payload=1, qos=1)

    client1.write_coils(25,[False]*1)
    pushButton.setStyleSheet("background-color: green")

def button_4_released(pushButton):
    client1.write_coils(25,True)
    client.publish("plc/smetnje", payload=0, qos=1)
    pushButton.setStyleSheet("background-color: red")

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1501, 749)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(20, 100, 131, 51))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(150, 100, 111, 51))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(260, 100, 101, 51))
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(360, 100, 121, 51))
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(480, 100, 141, 51))
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(620, 100, 121, 51))
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(730, 100, 141, 51))
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(870, 100, 141, 51))
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(20, 150, 131, 51))
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(self.centralwidget)
        self.label_12.setGeometry(QtCore.QRect(150, 150, 121, 51))
        self.label_12.setObjectName("label_12")
        self.label_13 = QtWidgets.QLabel(self.centralwidget)
        self.label_13.setGeometry(QtCore.QRect(270, 150, 101, 51))
        self.label_13.setObjectName("label_13")
        self.label_14 = QtWidgets.QLabel(self.centralwidget)
        self.label_14.setGeometry(QtCore.QRect(370, 150, 101, 51))
        self.label_14.setObjectName("label_14")
        self.label_15 = QtWidgets.QLabel(self.centralwidget)
        self.label_15.setGeometry(QtCore.QRect(470, 150, 101, 51))
        self.label_15.setObjectName("label_15")
        self.label_16 = QtWidgets.QLabel(self.centralwidget)
        self.label_16.setGeometry(QtCore.QRect(570, 150, 81, 51))
        self.label_16.setObjectName("label_16")
        self.label_17 = QtWidgets.QLabel(self.centralwidget)
        self.label_17.setGeometry(QtCore.QRect(650, 150, 81, 51))
        self.label_17.setObjectName("label_17")
        self.label_18 = QtWidgets.QLabel(self.centralwidget)
        self.label_18.setGeometry(QtCore.QRect(730, 150, 101, 51))
        self.label_18.setObjectName("label_18")
        self.label_19 = QtWidgets.QLabel(self.centralwidget)
        self.label_19.setGeometry(QtCore.QRect(830, 150, 91, 51))
        self.label_19.setObjectName("label_19")
        self.label_20 = QtWidgets.QLabel(self.centralwidget)
        self.label_20.setGeometry(QtCore.QRect(920, 150, 91, 51))
        self.label_20.setObjectName("label_20")
        self.label_21 = QtWidgets.QLabel(self.centralwidget)
        self.label_21.setGeometry(QtCore.QRect(20, 200, 101, 51))
        self.label_21.setObjectName("label_21")
        self.label_22 = QtWidgets.QLabel(self.centralwidget)
        self.label_22.setGeometry(QtCore.QRect(120, 200, 101, 51))
        self.label_22.setObjectName("label_22")
        self.label_23 = QtWidgets.QLabel(self.centralwidget)
        self.label_23.setGeometry(QtCore.QRect(220, 200, 111, 51))
        self.label_23.setObjectName("label_23")
        self.label_24 = QtWidgets.QLabel(self.centralwidget)
        self.label_24.setGeometry(QtCore.QRect(330, 200, 121, 51))
        self.label_24.setObjectName("label_24")
        self.label_25 = QtWidgets.QLabel(self.centralwidget)
        self.label_25.setGeometry(QtCore.QRect(450, 200, 111, 51))
        self.label_25.setObjectName("label_25")
        self.label_26 = QtWidgets.QLabel(self.centralwidget)
        self.label_26.setGeometry(QtCore.QRect(540, 200, 91, 51))
        self.label_26.setObjectName("label_26")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(20, 330, 141, 91))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.pressed.connect(lambda: button_pressed(self.pushButton))
        self.pushButton.released.connect(lambda: button_released(self.pushButton))
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(170, 330, 141, 91))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.pressed.connect(lambda: button_2_pressed(self.pushButton_2))
        self.pushButton_2.released.connect(lambda: button_2_released(self.pushButton_2))
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(320, 330, 141, 91))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.pressed.connect(lambda: button_3_pressed(self.pushButton_3))
        self.pushButton_3.released.connect(lambda: button_3_released(self.pushButton_3))
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(470, 330, 141, 91))
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_4.pressed.connect(lambda: button_4_pressed(self.pushButton_4))
        self.pushButton_4.released.connect(lambda: button_4_released(self.pushButton_4))
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(1020, 110, 201, 81))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(40, 260, 131, 41))
        self.label_2.setObjectName("label_2")
        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setGeometry(QtCore.QRect(970, 330, 221, 101))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.pushButton_5.setFont(font)
        self.pushButton_5.setObjectName("pushButton_5")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(1220, 10, 221, 211))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.label_27 = QtWidgets.QLabel(self.centralwidget)
        self.label_27.setGeometry(QtCore.QRect(630, 20, 251, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_27.setFont(font)
        self.label_27.setObjectName("label_27")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(20, 30, 231, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lineEdit.setFont(font)
        self.lineEdit.setText("")
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(280, 30, 113, 31))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_6.setGeometry(QtCore.QRect(420, 30, 81, 31))
        self.pushButton_6.setObjectName("pushButton_6")
        self.label_28 = QtWidgets.QLabel(self.centralwidget)
        self.label_28.setGeometry(QtCore.QRect(50, 0, 101, 21))
        self.label_28.setObjectName("label_28")
        self.label_29 = QtWidgets.QLabel(self.centralwidget)
        self.label_29.setGeometry(QtCore.QRect(300, 0, 49, 16))
        self.label_29.setObjectName("label_29")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1501, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        def changelabelcolor():
            global check
            check = check+1
            client.subscribe("plc/button_pressed", qos=1)
            client.subscribe("plc/button_release", qos=1)
            client.loop_start()
            i = 0
            try:
                r = client1.read_coils(0,24)
                i = r
            except:
                check = check-1
                pass
            #a = bitarray(32)
            a = bitarray('0' * 32, endian='little')
            for k in range(32):
                a[k] = 0
            if(check > 0):
                for j in range(24):
                    d = str(i.bits[j])
                    if(i.bits[j]==True):
                        a[j] = 1
                    elif(i.bits[j]==False):
                        a[j] = 0
                v = int(button_press)
                u = int(button_release)
            
            #button_pressed(self.pushButton)
                if(v>0):
                    button_pressed(self.pushButton)
                else:
                    button_released(self.pushButton)
                
                
                #print(a)
                
                #print(z)
                #print(z)
                
                #print(a)
                #print(a)
                
                z = struct.unpack("<L", a)[0]
                print(z)


                client.publish("plc/tabla", z, qos=1)
                client.subscribe("encyclopedia/#", qos=1)            
                mask = (1 << 22)
                
                if(z&mask):
                    print("1")
                else:
                    print("0")

                
                
            
                print(vrijednost)
                #print(z)

                if(i.bits[0] == 0):
                    self.label_3.setStyleSheet("background-color: red")
                else:
                    self.label_3.setStyleSheet("background-color: green")
                if(i.bits[1] == 0):
                    self.label_4.setStyleSheet("background-color: red")
                else:
                    self.label_4.setStyleSheet("background-color: green")
                if(i.bits[2] == 0):
                    self.label_5.setStyleSheet("background-color: red")
                else:
                    self.label_5.setStyleSheet("background-color: green")
                if(i.bits[3] == 0):
                    self.label_6.setStyleSheet("background-color: red")
                else:
                    self.label_6.setStyleSheet("background-color: green")
                if(i.bits[4] == 0):
                    self.label_7.setStyleSheet("background-color: red")
                else:
                    self.label_7.setStyleSheet("background-color: green")
                if(i.bits[5] == 0):
                    self.label_8.setStyleSheet("background-color: red")
                else:
                    self.label_8.setStyleSheet("background-color: green")
                if(i.bits[6] == 0):
                    self.label_9.setStyleSheet("background-color: red")
                else:
                    self.label_9.setStyleSheet("background-color: green")
                if(i.bits[7] == 0):
                    self.label_10.setStyleSheet("background-color: red")
                else:
                    self.label_10.setStyleSheet("background-color: green")
                if(i.bits[8] == 0):
                    self.label_11.setStyleSheet("background-color: red")
                else:
                    self.label_11.setStyleSheet("background-color: green")
                if(i.bits[9] == 0):
                    self.label_12.setStyleSheet("background-color: red")
                else:
                    self.label_12.setStyleSheet("background-color: green")
                if(i.bits[10] == 0):
                    self.label_13.setStyleSheet("background-color: red")
                else:
                    self.label_13.setStyleSheet("background-color: green")
                if(i.bits[11] == 0):
                    self.label_14.setStyleSheet("background-color: red")
                else:
                    self.label_14.setStyleSheet("background-color: green")
                if(i.bits[12] == 0):
                    self.label_15.setStyleSheet("background-color: red")
                else:
                    self.label_15.setStyleSheet("background-color: green")
                if(i.bits[13] == 0):
                    self.label_16.setStyleSheet("background-color: red")
                else:
                    self.label_16.setStyleSheet("background-color: green")
                if(i.bits[14] == 0):
                    self.label_17.setStyleSheet("background-color: red")
                else:
                    self.label_17.setStyleSheet("background-color: green")
                if(i.bits[15] == 0):
                    self.label_18.setStyleSheet("background-color: red")
                else:
                    self.label_18.setStyleSheet("background-color: green")
                if(i.bits[16] == 0):
                    self.label_19.setStyleSheet("background-color: red")
                else:
                    self.label_19.setStyleSheet("background-color: green")
                if(i.bits[17] == 0):
                    self.label_20.setStyleSheet("background-color: red")
                else:
                    self.label_20.setStyleSheet("background-color: green")
                if(i.bits[18] == 0):
                    self.label_21.setStyleSheet("background-color: red")
                else:
                    self.label_21.setStyleSheet("background-color: green")
                if(i.bits[19] == 0):
                    self.label_22.setStyleSheet("background-color: red")
                else:
                    self.label_22.setStyleSheet("background-color: green")
                if(i.bits[20] == 0):
                    self.label_23.setStyleSheet("background-color: red")
                else:
                    self.label_23.setStyleSheet("background-color: green")
                if(i.bits[21] == 0):
                    self.label_24.setStyleSheet("background-color: red")
                else:
                    self.label_24.setStyleSheet("background-color: green")
                if(i.bits[22] == 0):
                    self.label_25.setStyleSheet("background-color: red")
                else:
                    self.label_25.setStyleSheet("background-color: green")
                if(i.bits[23] == 0):
                    self.label_26.setStyleSheet("background-color: red")
                else:
                    self.label_26.setStyleSheet("background-color: green")
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.timer = QtCore.QTimer()
        self.timer.timeout.connect(changelabelcolor)
        self.timer.start(4000)  
              
        

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_3.setText(_translate("MainWindow", "Smetnje Zat trake"))
        self.label_4.setText(_translate("MainWindow", "Pot. Uze Desno"))
        self.label_5.setText(_translate("MainWindow", "Pot. Uze Lijevo"))
        self.label_6.setText(_translate("MainWindow", "Bocno Skretanje Rep"))
        self.label_7.setText(_translate("MainWindow", "Bocno Skretanje Pog St"))
        self.label_8.setText(_translate("MainWindow", "Preopt. Bimetal m1"))
        self.label_9.setText(_translate("MainWindow", "Preopt. Bim. m2"))
        self.label_10.setText(_translate("MainWindow", "Preg.Os.M1"))
        self.label_11.setText(_translate("MainWindow", "Preg.Os.M2"))
        self.label_12.setText(_translate("MainWindow", "Grij.Lez.Led m1"))
        self.label_13.setText(_translate("MainWindow", "Grij.nam m1"))
        self.label_14.setText(_translate("MainWindow", "Grij.Lez.Led m2"))
        self.label_15.setText(_translate("MainWindow", "Grij.nam.m2"))
        self.label_16.setText(_translate("MainWindow", "Sf6. gas m1"))
        self.label_17.setText(_translate("MainWindow", "Sf6. gas m2"))
        self.label_18.setText(_translate("MainWindow", "Zapunj. kosa"))
        self.label_19.setText(_translate("MainWindow", "Not pogon"))
        self.label_20.setText(_translate("MainWindow", "Not Kljuc"))
        self.label_21.setText(_translate("MainWindow", "Proklizavanje"))
        self.label_22.setText(_translate("MainWindow", "Krajnji vrata m1"))
        self.label_23.setText(_translate("MainWindow", "Krajnji Vrata m2"))
        self.label_24.setText(_translate("MainWindow", "Greska Kocnice sig"))
        self.label_25.setText(_translate("MainWindow", "Start Kontejner"))
        self.label_26.setText(_translate("MainWindow", "Start Rukovaoc"))
        self.pushButton.setText(_translate("MainWindow", "START"))
        self.pushButton_2.setText(_translate("MainWindow", "STOP"))
        self.pushButton_3.setText(_translate("MainWindow", "SPREMAN ZA RAD"))
        self.pushButton_4.setText(_translate("MainWindow", "Kvitiranje Smetnji"))
        self.label.setText(_translate("MainWindow", "Proklizavanje"))
        self.label_2.setText(_translate("MainWindow", "DataBase"))
        self.pushButton_5.setText(_translate("MainWindow", "ISTORIJA GRESAKA"))
        self.label_27.setText(_translate("MainWindow", "ModbusCheck"))
        self.pushButton_6.setText(_translate("MainWindow", "Konektuj"))
        self.label_28.setText(_translate("MainWindow", "IP adresa"))
        self.label_29.setText(_translate("MainWindow", "Port"))




if __name__ == "__main__":
    import sys
    client.loop_start()
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())



